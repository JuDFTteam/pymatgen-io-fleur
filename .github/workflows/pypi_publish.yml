name: continous-deployment

# deploy on creating a release tag vX.Y.Z
# will only be published to PyPi if the tests pass

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:

  linting:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[pre-commit]
    - name: Run pre-commit
      run: |
        pre-commit run --all-files || (git status --short; git diff ; exit 1)

  tests:

    strategy:
      max-parallel: 20
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8","3.9","3.10"]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build pymatgen with compatible numpy
      run: |
        python -m pip install --upgrade pip
        pip install numpy==1.21.4 wheel cython
        pip install pymatgen==2022.7.8 --no-cache-dir --no-build-isolation
    - name: Install dependencies
      run: |
        pip install --quiet -r requirements-ci.txt
        pip install masci-tools
        pip install --no-deps -e .
    - name: pytest
      run: |
        pytest
    - name: Upload code coverage report
      run: |
        pip install codecov
        codecov

  publish:
    name: Publish to PyPi
    needs: [tests, linting] #pylint-warnings could be added at some later point
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install flit
        run: |
          pip install flit~=3.5
      - name: Build and Publish to PyPi
        run: |
          flit publish
        env:
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
