name: continous-deployment

# deploy on creating a release tag vX.Y.Z
# will only be published to PyPi if the tests pass

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:

  linting:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt --quiet
    - name: mypy
      run: |
        mypy --namespace-packages --explicit-package-bases pymatgen
    - name: black
      run: |
        black --version
        black --check --diff --color pymatgen
    - name: flake8
      run: |
        flake8 --count --show-source --statistics pymatgen
        # exit-zero treats all errors as warnings.
        flake8 --count --exit-zero --max-complexity=20 --statistics pymatgen
    - name: pydocstyle
      run: |
        pydocstyle --count pymatgen
    - name: pylint
      run: |
        pylint pymatgen

  tests:

    strategy:
      max-parallel: 20
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7,3.8,3.9]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --quiet -r requirements.txt -r requirements-ci.txt
        pip install -e .
    - name: pytest
      run: |
        pytest --cov=pymatgen.io.fleur --durations=30 pymatgen
  
  publish:
    name: Publish to PyPi
    needs: [tests, linting] #pylint-warnings could be added at some later point
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Build package
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
